cursor1{#arg=[false, 0,0,0]}={	
	LeftHand.x=(#arg)[1];
	LeftHand.y=(#arg)[2];
	LeftHand.z=(#arg)[3];	
}
cursor2{#arg=[false, 0,0,0]}={	
	rightHand.x=(#arg)[1];
	rightHand.y=(#arg)[2];
	rightHand.z=(#arg)[3];	
}



gesture{#arg=[false, 1, 0, 0, 0]}={
	Gesture.isActive=(#arg)[0];
	Gesture.scale=(#arg)[1];
	Gesture.rotate=(#arg)[2];
	Gesture.translateX=(#arg)[3];
	Gesture.translateY=(#arg)[4];
}


// 
// gesture{#val=[0,0,0,0,0,0]}={
// 	LeftHand.x=(#val)[0];
// 	LeftHand.y=(#val)[1];
// 	LeftHand.z=(#val)[2];
// 	RightHand.x=(#val)[3];
// 	RightHand.y=(#val)[4];
// 	RightHand.z=(#val)[5];
// 	
// 	Image.Message.text=(LeftHand.x~" "~LeftHand.y~" "~LeftHand.z~"\n"~RightHand.x~" "~RightHand.y~" "~RightHand.z);
// 	
// 	
// }

// HairTrigger.FollowLeftHand<<
// 	.test={Display.Primary.mouseX, Display.Primary.mouseY}
// 	.exec={gesture(^val=[Display.Primary.mouseX, Display.Primary.mouseY,0,0,0,0])}
// >>

LeftHand<<
	.x=0
	.y=0
	.z=0
	.t=0
>>


RightHand<<
	.x=0
	.y=0
	.z=0
	.t=0
>>

Image.LeftHandCursor<<
	.parent="Display.Primary"
	.layer=99999
	.buffer=red
	.x={LeftHand.x}
	.y={LeftHand.y}
	.anchor=_C
	.scaleX={$$$.t}
	.width=50
	.height=50
	.alpha=0.5
	.t={LeftHand.t}
>>


Image.RightHandCursor<<
	.parent="Display.Primary"
	.layer=99999
	.buffer=gray
	.x={RightHand.x}
	.y={RightHand.y}
	.anchor=_C
	.scaleX={$$$.t}
	.width=50
	.height=50
	.alpha=0.5
	.t={RightHand.t}
>>



Gesture<<
	.isActive=false
	.scale=1
	.rotate=0
	.translateX=0
	.translateY=0
>>

HairTrigger.GestureHair<<
	.test={Gesture.scale; Gesture.rotate; Gesture.translateX; Gesture.translateY}
	.exec={Gesture.isActive?(
		   View.3d.fov={25/Gesture.scale};
		   View.3d.desiredTheta={Gesture.rotate};
		   View.3d.desiredCx={Gesture.translateX/(1920*2)+0.5};
		   View.3d.desiredCy={Gesture.translateY/(1080*2)+0.5});
	   }
>>








Area.Class<<

	.leftHover={LeftHand.x>($$.image->absX+$$.x) & LeftHand.x<($$.image->absX+$$.x+$$.width*$$.image->scaleX) &
 			    LeftHand.y>($$.image->absY+$$.y) & LeftHand.y<($$.image->absY+$$.y+$$.height*$$.image->scaleY)}
	.leftPress={$$.press=true}
	
	.leftT=0
	
	
	.rightHover={RightHand.x>($$.image->absX+$$.x) & RightHand.x<($$.image->absX+$$.x+$$.width*$$.image->scaleX) &
 			    RightHand.y>($$.image->absY+$$.y) & RightHand.y<($$.image->absY+$$.y+$$.height*$$.image->scaleY)}
	.rightPress={$$.press=true}
	
	.rightT=0
	
	
	.new= Area.Class.new + {		
		
		ChangeTrigger.$_LeftHover.test={$$.leftHover};
		ChangeTrigger.$_LeftHover.exec={$$.leftHover?(Anim.$_LeftTimer.goal=0; LeftHand.t={$$.leftT}; $$.hover=true):(Anim.$_LeftTimer.goal=3; $$.press=false; $$.hover=false)};
	
		Anim.$_LeftTimer.goal=1.5;
		Anim.$_LeftTimer.rate={$$.leftHover?2:999999};
		Anim.$_LeftTimer.attr=["$$.leftT"];
		
		Trigger.$_LeftPress.test={$$.leftT==0};
		Trigger.$_LeftPress.exec={$$.leftHover?$$.leftPress()};

		ChangeTrigger.$_RightHover.test={$$.rightHover};
		ChangeTrigger.$_RightHover.exec={$$.rightHover?(Anim.$_RightTimer.goal=0; RightHand.t={$$.rightT}; $$.hover=true):(Anim.$_RightTimer.goal=3; $$.press=false; $$.hover=false)};
	
		Anim.$_RightTimer.goal=1.5;
		Anim.$_RightTimer.rate={$$.rightHover?2:999999};
		Anim.$_RightTimer.attr=["$$.rightT"];
		
		Trigger.$_RightPress.test={$$.rightT==0};
		Trigger.$_RightPress.exec={$$.rightHover?$$.rightPress()};

	}	
>>





Image.IPAddress<<
	.parent="Display.Primary"
	.text={Meson.getProperty("meson.ipaddr")}
	.layer=99999999999
>>

Image.Message<<
	.parent="Display.Primary"
	.anchor=_NE
	.x={$$$.parent->width-100}
	.layer=99999999999
>>

Image.Message2<<
	.parent="Display.Primary"
	.anchor=_NE
	.x={$$$.parent->width-100}
	.layer=99999999999
	.y=200
>>

displayMsg={
	Image.Message2.text=(#arg);	
}






